p.interval
p
p.interval <- ggplot(data = activity.interval.summary, aes(x = interval, y = mean)) +
geom_line(color = "blue") +
labs(title = "Time Series of Steps per Interval Averaged Across All Days") +
labs(x = "Interval", y = "Average Steps")
p.interval
max(activity.interval.summary$mean)
subset(activity.interval.summary$mean == max(activity.interval.summary$mean))
subset(activity.interval.summary, mean == max(activity.interval.summary$mean))
maximum.steps <- subset(activity.interval.summary, mean == max(activity.interval.summary$mean))
maximum.steps$interval
activity.with.na <-
read.csv("Reproducible Research/PeerAssessment1/activity.csv")
count(activity.with.na$steps == NA)
?count
nrow(activity.with.na)
?nrow
activity.with.na[steps == NA]
activity.with.na[activity.with.na$steps == NA]
activity.with.na[activity.with.na$steps == NA, ]
nrow(activity.with.na[activity.with.na$steps == NA, ])
nrow(activity.with.na)
?is.na
nrow(is.na(activity.with.na$steps))
is.na(activity.with.na$steps)
activity.with.na[is.na(activity.with.na$steps), ]
nrow(activity.with.na[is.na(activity.with.na$steps), ])
?na.replace
install.packages("adegenet")
library(adegenet)
?na.replace
??na.replace
?"adegenet"
View(activity.interval.summary)
activity.interval.summary$interval == activity.with.na$interval
activity.interval.summary[activity.interval.summary$interval == activity.with.na$interval, ]
?mutate
?transform
df <- transform(activity.with.na, steps = ifelse(is.na(steps),
activity.interval.summary[activity.interval.summary$interval == activity.with.na$interval, ],
steps))
View(df)
indx.na <- which(is.na(activity.with.na$steps))
indx.na
zzz <- activity.with.na$steps
zzz
zzz[indx.na]
?ts
zzz[indx.na]
activity.interval.summary[paste(activity.with.na$interval[indx.na], "", sep = "")]
zzz[indx.na] <- activity.interval.summary[paste(activity.with.na$interval[indx.na], "", sep = "")]
zzz <- activity.with.na$steps
zzz[indx.na]
zzz
zzz[indx.na]
zzz[indx.na]
activity.with.na$interval[indx.na]
?paste
activity.interval.summary[paste(activity.with.na$interval[indx.na], "", sep = "")]
activity.interval.summary[activity.with.na$interval[indx.na], ]
activity.with.na$interval[indx.na],
activity.with.na$interval[indx.na]
activity.with.na$interval[indx.na, ]
activity.with.na$interval[indx.na]
activity.with.na$steps[indx.na, ]
activity.with.na$steps[indx.na]
activity.interval.summary[activity.with.na$interval[indx.na], ]
activity.interval.summary$mean[activity.with.na$interval[indx.na]]
activity.interval.summary[activity.with.na$interval[indx.na], ]
activity.interval.summary[activity.with.na$interval[indx.na], ]
activity.with.na$interval[indx.na]
test <- c(activity.with.na$interval[indx.na])
activity.interval.summary$mean[activity.with.na$interval[indx.na]]
activity.interval.summary[activity.with.na$interval[indx.na], ]
activity.with.na$interval[indx.na]
head(activity.interval.summary[activity.with.na$interval[indx.na], ]))
head(activity.interval.summary[activity.with.na$interval[indx.na], ])
activity.interval.summary[activity.with.na$interval[indx.na], ]
head(activity.with.na$interval[indx.na])
activity.with.na$interval[indx.na]
nrow(indx.na)
indx.na
str(indx.na)
for(i in indx.na) {
}
i
?lookup_mean
activity$steps[is.na(activity$steps)]
activity$steps[is.na(activity$steps), ]
activity$steps[is.na(activity$steps)]
activity.with.na$steps
activity.with.na$steps[is.na(activity.with.na$steps)]
interval.means[as.character(activity$interval)]
activity.interval.summary[as.character(activity.with.na$interval)]
as.character(activity.with.na$interval)
as.character(activity.with.na$interval[activity.with.na$steps[is.na(activity.with.na$steps)]])
rm(i, indx.na)
rm(test, zzz)
rm(df)
index.na <- activity.with.na$steps[is.na(activity.with.na$steps)]
activity.with.na$steps[is.na(activity.with.na$steps)]
which(activity.with.na$steps[is.na(activity.with.na$steps)])
str(activity.with.na$steps[is.na(activity.with.na$steps)])
which(is.na(activity.with.na$steps))
index.na <- which(is.na(activity.with.na$steps))
head(which(is.na(activity.with.na$steps)))
activity.with.na[index.na, ]
str(activity.with.na[index.na, ])
activity.with.na$interval[index.na, ]
activity.with.na$interval[index.na]
?replace
activity.interval.summary$mean[index.na]
activity.with.na[activity.with.na$interval == activity.interval.summary$interval]
activity.with.na[activity.with.na$interval == activity.interval.summary$interval, ]
?mutate
mutate(activity.with.na, mean(activity.interval.grouped$steps)
)
View(activity.with.na)
?apply
mean(activity.interval.grouped$steps)
mean(activity.interval.grouped$steps)
allmean <- mean(activity.interval.grouped$steps)
mutate(activity.with.na, steps = ifelse(is.na(steps), allmean, steps)
)
activity.with.na
allmean
allmean <- as.int(mean(activity.interval.grouped$steps))
as.numeric(allmean)
allmean <- as.integer(mean(activity.interval.grouped$steps))
allmean
mutate(activity.with.na, steps = ifelse(is.na(steps), allmean, steps)
)
activity.with.na[index.na]
activity.with.na[index.na, ]
row_number()
activity.interval.summary$mean[2]
activity.interval.summary$mean[3]
activity.interval.summary$mean[index.na]
activity.interval.summary$mean[interval == 1]
activity.interval.summary$mean[activity.interval.summary$interval == 1]
activity.interval.summary$mean[activity.interval.summary$interval == 1, ]
activity.interval.summary$mean[activity.interval.summary$interval == 1]
activity.interval.summary$mean[activity.interval.summary$interval == 2]
activity.interval.summary$mean[activity.interval.summary$interval == 0]
activity.interval.summary$mean[activity.interval.summary$interval == 5]
mutate(activity.with.na, steps = ifelse(is.na(steps),
activity.interval.summary$mean[activity.interval.summary$interval == row_number()],
steps))
testdf <- mutate(activity.with.na, steps = ifelse(is.na(steps),
activity.interval.summary$mean[activity.interval.summary$interval == row_number()],
steps))
View(testdf)
testdf <- mutate(activity.with.na, steps = ifelse(is.na(steps),
activity.interval.summary$mean[activity.interval.summary$interval == activity.with.na$interval[row_number()]],
steps))
View(testdf)
?row_number
rm(allmean)
rm(index.na)
rm(testdf)
activity.steps.imputed <- mutate(activity.with.na, steps = ifelse(is.na(steps),
activity.interval.summary$mean[
activity.interval.summary$interval ==
activity.with.na$interval[row_number()]],
steps))
activity.steps.imputed.grouped <- group_by(activity.steps.imputed, date)
activity.steps.imputed.summary <- summarise(activity.steps.imputed.grouped, sum = sum(steps))
p.steps.imputed <- ggplot(data = activity.steps.imputed.summary, aes(x = sum)) +
geom_histogram(binwidth = 1000,
col = "blue",
aes(fill = ..count..)) +
scale_fill_gradient("Count", low = "brown", high = "orange") +
labs(title = "Histogram for Steps Taken Each Day") +
labs(x = "Steps Taken in One Day (Binwidth of 1000 Steps)", y = "Day Count") +
xlim(c(0, 22000))
p.steps
p.steps.imputed
p
centrality.steps.imputed <- summarise(activity.steps.imputed.summary, mean = mean(sum), median = median(sum))
centrality.steps.imputed
View(activity.steps.imputed.summary)
?summarise
?mean
centrality.steps.imputed <- summarise(activity.steps.imputed.summary,
mean = mean(sum, na.rm = TRUE),
median = median(sum, na.rm = TRUE))
centrality.steps.imputed
centrality
?weekdays
View(activity.steps.imputed.grouped)
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped$weekday, weekdays(activity.steps.imputed.grouped$date))
?mutate
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped, weekday = weekdays(activity.steps.imputed.grouped$date))
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped, weekday = weekdays(as.date(activity.steps.imputed.grouped$date)))
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped, weekday = weekdays(as.Date(activity.steps.imputed.grouped$date)))
?as.Date
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped, weekday = weekdays(as.Date(activity.steps.imputed.grouped$date, "%Y-%m-%d")))
activity.steps.imputed.grouped$date <- as.Date(activity.steps.imputed.grouped$date)
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped, weekday = weekdays(as.Date(activity.steps.imputed.grouped$date)))
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped, weekday = weekdays(activity.steps.imputed.grouped$date))
weekdays(activity.steps.imputed.grouped$date)
?mutate
?ifelse
mutate(activity.steps.imputed.grouped,
weekday = weekdays(activity.steps.imputed.grouped$date))
activity.steps.imputed.grouped$day <- weekdays(activity.steps.imputed.grouped$date)
?replace
mutate(activity.steps.imputed.grouped,
day = ifelse(day == "Saturday" || day == "Sunday",
day = "Weekend", day = "Weekday"))
mutate(activity.steps.imputed.grouped,
day = ifelse(day == "Saturday" || day == "Sunday",
"Weekend", "Weekday"))
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped,
day = ifelse(day == "Saturday" || day == "Sunday", "Weekend", "Weekday"))
as.factor(activity.steps.imputed.grouped$day)
activity.steps.imputed.grouped$day <- as.factor(activity.steps.imputed.grouped$day)
View(activity.steps.imputed.summary)
View(activity.steps.imputed)
activity.steps.imputed$day <- weekdays(activity.steps.imputed$date)
activity.steps.imputed <-
mutate(activity.steps.imputed,
day = ifelse(day == "Saturday" || day == "Sunday", "Weekend", "Weekday"))
activity.steps.imputed$day <- as.factor(activity.steps.imputed$day)
activity.steps.imputed$day <- weekdays(activity.steps.imputed$date)
str(activity.steps.imputed)
str(activity.steps.imputed.grouped)
activity.steps.imputed <- mutate(activity.with.na, steps = ifelse(is.na(steps),
activity.interval.summary$mean[
activity.interval.summary$interval ==
activity.with.na$interval[row_number()]],
steps))
str(activity.steps.imputed.grouped)
str(activity.steps.imputed)
str(activity.with.na)
str(activity)
activity.steps.imputed.grouped$day <- weekdays(activity.steps.imputed$date)
activity.steps.imputed.grouped$day <- weekdays(activity.steps.imputed.grouped$date)
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped,
day = ifelse(day == "Saturday" || day == "Sunday", "Weekend", "Weekday"))
activity.steps.imputed.grouped$day <- as.factor(activity.steps.imputed.grouped$day)
View(activity.steps.imputed.grouped)
asig.day <- group_by(activity.steps.imputed.grouped, interval)
asig.day.summary <- summarise(asig.day, mean = mean(steps))
View(asig.day.summary)
asig.day$mean <- summarise(asig.day, mean = mean(steps))
summarise(asig.day, mean = mean(steps))
asig.day <- group_by(activity.steps.imputed.grouped, interval, day)
asig.day.summary <- summarise(asig.day, mean = mean(steps))
?summarise
?mean
asig.day.summary <- summarise(asig.day, mean = mean(steps, na.rm = TRUE))
asig.day.summary <- summarise(asig.day, meansteps = mean(steps, na.rm = TRUE))
p.day <- ggplot(data = asig.day.summary, aes(x = interval, y = mean)) +
geom_line(color = "blue") +
labs(title = "Time Series of Steps Averaged Across All Days per Interval") +
labs(x = "Interval", y = "Average Steps")
p.day
ggplot(data = asig.day.summary, aes(x = interval, y = mean))
ggplot(data = asig.day.summary, aes(x = interval, y = mean))ggplot(data = asig.day.summary, aes(x = interval, y = mean)) +
geom_line(color = "blue")
ggplot(data = asig.day.summary, aes(x = interval, y = mean))ggplot(data = asig.day.summary, aes(x = interval, y = mean)) + geom_line(color = "blue")
ggplot(data = asig.day.summary, aes(x = interval, y = mean)) + geom_line(color = "blue")
ggplot(data = asig.day.summary, aes(x = interval, y = meansteps)) + geom_line(color = "blue")
p.day <- ggplot(data = asig.day.summary, aes(x = interval, y = meansteps)) + geom_line(color = "blue")
p.day
p.day + facet_grid(day ~ .)
p.day <- ggplot(data = asig.day.summary, aes(x = interval, y = mean)) +
geom_line(color = "blue") +
labs(title = "Time Series of Steps Averaged Across All Days per Interval") +
labs(x = "Interval", y = "Average Steps") +
facet_grid(day ~ .)
p.day
p.day <- ggplot(data = asig.day.summary, aes(x = interval, y = meansteps)) +
geom_line(color = "blue") +
labs(title = "Time Series of Steps Averaged Across All Days per Interval") +
labs(x = "Interval", y = "Average Steps") +
facet_grid(day ~ .)
p.day
getwd()
activity <-
read.csv("Reproducible Research/PeerAssessment1/activity.csv") %>%
filter(!is.na(steps))
activity.steps.grouped <- group_by(activity, date)
activity.steps.summary <- summarise(activity.steps.grouped, sum = sum(steps))
?read.csv
activity.steps.imputed.grouped$day <- weekdays(activity.steps.imputed.grouped$date)
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped,
day = ifelse(day == "Saturday" || day == "Sunday", "Weekend", "Weekday"))
activity.steps.imputed.grouped$day <- as.factor(activity.steps.imputed.grouped$day)
activity <-
read.csv("/home/tim/datasciencecoursera/Practicing-R/Reproducible Research/PeerAssessment1/activity.csv") %>%
filter(!is.na(steps))
activity.steps.grouped <- group_by(activity, date)
activity.steps.summary <- summarise(activity.steps.grouped, sum = sum(steps))
activity.interval.grouped <- group_by(activity, interval)
activity.interval.summary <- summarise(activity.interval.grouped, mean = mean(steps))
activity.with.na <-
read.csv("/home/tim/datasciencecoursera/Practicing-R/Reproducible Research/PeerAssessment1/activity.csv")
nrow(activity.with.na[is.na(activity.with.na$steps), ])
activity.steps.imputed <- mutate(activity.with.na, steps = ifelse(is.na(steps),
activity.interval.summary$mean[
activity.interval.summary$interval ==
activity.with.na$interval[row_number()]],
steps))
activity.steps.imputed.grouped <- group_by(activity.steps.imputed, date)
activity.steps.imputed.summary <- summarise(activity.steps.imputed.grouped, sum = sum(steps))
activity.steps.imputed.grouped$day <- weekdays(activity.steps.imputed.grouped$date)
activity.steps.imputed.grouped$day <- weekdays(as.Date(activity.steps.imputed.grouped$date))
activity.steps.imputed.grouped <-
mutate(activity.steps.imputed.grouped,
day = ifelse(day == "Saturday" || day == "Sunday", "Weekend", "Weekday"))
activity.steps.imputed.grouped$day <- as.factor(activity.steps.imputed.grouped$day)
asig.day <- group_by(activity.steps.imputed.grouped, interval, day)
asig.day.summary <- summarise(asig.day, meansteps = mean(steps, na.rm = TRUE))
p.day <- ggplot(data = asig.day.summary, aes(x = interval, y = meansteps)) +
geom_line(color = "blue") +
labs(title = "Time Series of Steps Averaged Across All Days per Interval") +
labs(x = "Interval", y = "Average Steps") +
facet_grid(day ~ .)
p.day
test <- getwd()
test2 <- c(test, "/Reproducible Research/PeerAssessment1/activity.csv")
test2 <- paste(test, "/Reproducible Research/PeerAssessment1/activity.csv")
test2 <- paste(test, "/Reproducible Research/PeerAssessment1/activity.csv", sep = "")
test2
test2 <- paste(getwd(), "/Reproducible Research/PeerAssessment1/activity.csv", sep = "")
datapath <- paste(getwd(), "/Reproducible Research/PeerAssessment1/activity.csv", sep = "")
rm(test, test2)
act <- read.csv(datapath) %>% filter(!is.na(steps))
library(dplyr) # for data wrangling
library(ggplot2) # for good looking plots
act <- read.csv(datapath) %>% filter(!is.na(steps))
datapath <- paste(getwd(), "/Reproducible Research/PeerAssessment1/activity.csv", sep = "")
getwd()
datapath <- paste("/home/tim/datasciencecoursera/Practicing-R/Reproducible Research/PeerAssessment1/activity.csv")
?mutate
summarise(act.steps.imputed.summary,
mean = mean(sum, na.rm = TRUE),
median = median(sum, na.rm = TRUE))
datapath <-
paste("/home/tim/datasciencecoursera/Practicing-R/Reproducible Research/PeerAssessment1/activity.csv")
act <- read.csv(datapath) %>% filter(!is.na(steps))
act.steps.grouped <- group_by(act, date) # enables analysis by date factor.
act.steps.summary <- summarise(act.steps.grouped, sum = sum(steps)) # computes sum of steps for each day.
meanmedian.steps <-
summarise(act.steps.summary,
mean = mean(sum),
median = median(sum))
act.interval.grouped <- group_by(act, interval) # enables analysis by interval
act.interval.summary <- summarise(act.interval.grouped, mean = mean(steps)) # computes mean of steps by interval
max.steps <- subset(act.interval.summary, mean == max(act.interval.summary$mean))
max.steps$interval
act.with.na <- read.csv(datapath)
nrow(act.with.na[is.na(act.with.na$steps), ])
act.steps.imputed <- mutate(act.with.na, steps = ifelse(is.na(steps),
act.interval.summary$mean[
act.interval.summary$interval ==
act.with.na$interval[row_number()]],
steps))
act.steps.imputed.grouped <- group_by(act.steps.imputed, date)
act.steps.imputed.summary <- summarise(act.steps.imputed.grouped, sum = sum(steps))
meanmedian.steps
meanmedian.steps.imputed <- meanmedian.steps %>% summarise(act.steps.imputed.summary,
mean.NA = mean(sum, na.rm = TRUE),
median.NA = median(sum, na.rm = TRUE))
meanmedian.steps.imputed <- meanmedian.steps %>% summarise(act.steps.imputed.summary,
mean.NA = mean(sum, na.rm = TRUE))
meanmedian.steps <- summarise(act.steps.imputed.summary,
mean.NA = mean(sum, na.rm = TRUE))
meanmedian.steps
str(max.steps)
?lookup_mean
datapath <-
paste("/home/tim/datasciencecoursera/Practicing-R/Reproducible Research/PeerAssessment1/activity.csv")
act <- read.csv(datapath) %>% filter(!is.na(steps))
act.steps.grouped <- group_by(act, date) # enables analysis by date factor.
act.steps.summary <- summarise(act.steps.grouped, sum = sum(steps)) # computes sum of steps for each day.
View(act)
str(act)
?aggregate
aggregate(steps ~ interval, data=act, FUN=mean)
act <- read.csv(datapath)
aggregate(steps ~ interval, data=act, FUN=mean)
head(aggregate(steps ~ interval, data=act, FUN=mean))
act.interval.grouped <- group_by(act, interval) # enables analysis by interval
act.interval.summary <- summarise(act.interval.grouped, mean = mean(steps)) # computes mean of steps by interval
p.interval <- ggplot(data = act.interval.summary, aes(x = interval, y = mean)) +
geom_line(color = "blue") +
labs(title = "Time Series of Steps Averaged Across All Days per Interval") +
labs(x = "Time Interval", y = "Average Steps")
p.interval
\
datapath <-
paste("/home/tim/datasciencecoursera/Practicing-R/Reproducible Research/PeerAssessment1/activity.csv")
act <- read.csv(datapath) %>% filter(!is.na(steps))
act.steps.grouped <- group_by(act, date) # enables analysis by date factor.
act.steps.summary <- summarise(act.steps.grouped, sum = sum(steps)) # computes sum of steps for each day.
meanmedian.steps <-
summarise(act.steps.summary,
mean = mean(sum),
median = median(sum))
meanmedian.steps
act.interval.grouped <- group_by(act, interval) # enables analysis by interval
act.interval.summary <- summarise(act.interval.grouped, mean = mean(steps)) # computes mean of steps by interval
p.interval <- ggplot(data = act.interval.summary, aes(x = interval, y = mean)) +
geom_line(color = "blue") +
labs(title = "Time Series of Steps Averaged Across All Days per Interval") +
labs(x = "Time Interval", y = "Average Steps")
p.interval
max.steps <- subset(act.interval.summary, mean == max(act.interval.summary$mean))
max.steps
act.with.na <- read.csv(datapath)
nrow(act.with.na[is.na(act.with.na$steps), ])
act.steps.imputed <- mutate(act.with.na, steps = ifelse(is.na(steps),
act.interval.summary$mean[
act.interval.summary$interval ==
act.with.na$interval[row_number()]],
steps))
aggregate(steps ~ interval, data=act.steps.imputed, FUN=mean)
whatisthis <- aggregate(steps ~ interval, data=act.steps.imputed, FUN=mean)
act.steps.imputed.grouped <- group_by(act.steps.imputed, date)
act.steps.imputed.summary <- summarise(act.steps.imputed.grouped, sum = sum(steps))
View(whatisthis)
act.steps.imputed.grouped$day <- weekdays(as.Date(act.steps.imputed.grouped$date))
act.steps.imputed.grouped <-
mutate(act.steps.imputed.grouped,
day = ifelse(day == "Saturday" || day == "Sunday", "Weekend", "Weekday"))
act.steps.imputed.grouped$day <- as.factor(act.steps.imputed.grouped$day)
what2 <- cbind(whatisthis, act.interval.summary)
View(what2)
setwd("~/datasciencecoursera/Practicing-R/Reproducible Research/PeerAssessment1/")
getwd()
dir
dir()
ActData <- read.csv(unz('activity.zip', "activity.csv"))
ActData$date <- as.Date(ActData$date)
head(ActData)
library(ggplot2)
#Calculate the Sum total daily steps
daily_steps <- aggregate(steps~date,data=ActData,FUN=sum,na_rm=TRUE)
#Build the plot
daily_step_histplot <- ggplot(daily_steps,aes(x = steps)) +
ggtitle("Histogram of Daily Steps") +
xlab("Total Steps (bin=2500)") +
geom_histogram(binwidth = 2500)
daily_step_histplot
nullrows <- nrow(ActData[is.na(ActData$steps),])
print(nullrows)
ActData_Clean <- merge(ActData,time_steps,by='interval')
time_steps <- aggregate(steps~interval,data=ActData,FUN=mean,na.rm=TRUE)
plot(x=time_steps$interval,y=time_steps$steps,type = "l",main="Average Steps by Interval",xlab = "Interval",ylab="Avg Steps")
ActData_Clean <- merge(ActData,time_steps,by='interval')
View(ActData)
View(ActData_Clean)
ActData_Clean$steps.y <- round(ActData_Clean$steps.y,0)
ActData_Clean$merged_steps <- ActData_Clean$steps.x
replace_index <- is.na(ActData_Clean$steps.x)
ActData_Clean$merged_steps[replace_index] <- ActData_Clean$steps.y
daily_steps_clean <- aggregate(merged_steps~date,data=ActData_Clean,FUN=sum,na_rm=TRUE)
daily_step_histplot_clean <- ggplot(daily_steps_clean,aes(x = merged_steps)) +
ggtitle("Histogram of Daily Steps - NA Removed") +
xlab("Total Steps (bin=2500)") +
geom_histogram(binwidth = 2500)
daily_step_histplot_clean
View(time_steps)
plot(x=time_steps$interval,y=time_steps$steps,type = "l",main="Average Steps by Interval",xlab = "Interval",ylab="Avg Steps")
datapath <-
paste("/home/tim/datasciencecoursera/Practicing-R/Reproducible Research/PeerAssessment1/activity.csv")
act <- read.csv(datapath) %>% filter(!is.na(steps))
act.steps.grouped <- group_by(act, date) # enables analysis by date factor.
act.steps.summary <- summarise(act.steps.grouped, sum = sum(steps)) #
library(dplyr) # for data wrangling
library(ggplot2) # for good looking plots
act <- read.csv(datapath) %>% filter(!is.na(steps))
act.steps.grouped <- group_by(act, date) # enables analysis by date factor.
act.steps.summary <- summarise(act.steps.grouped, sum = sum(steps)) # computes sum of steps for each day.
meanmedian.steps <-
summarise(act.steps.summary,
mean = mean(sum),
median = median(sum))
meanmedian.steps
act.interval.grouped <- group_by(act, interval) # enables analysis by interval
act.interval.summary <- summarise(act.interval.grouped, mean = mean(steps)) # computes mean of steps by interval
p.interval <- ggplot(data = act.interval.summary, aes(x = interval, y = mean)) +
geom_line(color = "blue") +
labs(title = "Time Series of Steps Averaged Across All Days per Interval") +
labs(x = "Time Interval", y = "Average Steps")
p.interval
max.steps <- subset(act.interval.summary, mean == max(act.interval.summary$mean))
max.steps
act.with.na <- read.csv(datapath)
nrow(act.with.na[is.na(act.with.na$steps), ])
act.steps.imputed <- mutate(act.with.na, steps = ifelse(is.na(steps),
act.interval.summary$mean[
act.interval.summary$interval ==
act.with.na$interval[row_number()]],
steps))
View(act.steps.imputed)
View(act.with.na)
act.interval.summary$interval
